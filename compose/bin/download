#!/usr/bin/env bash

VERSION=${1:-2.4.6-p4}
EDITION=${2:-community}

# Define ANSI escape codes for colors
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

if [ -d "./src" ]; then
  if [ "$(ls -A ./src)" ]; then
    echo "Error: The \"src\" directory is not empty. Please remove all contents within this directory and try again."
    exit 1
  fi
fi


echo "Downloading $EDITION version $VERSION"

if [ "$EDITION" == "mageos-nightly" ]; then
  composer create-project --stability alpha --repository-url=https://upstream-nightly.mage-os.org magento/project-community-edition ./src
elif [ "$EDITION" == "mageos-mirror" ] || [ "$EDITION" == "mageos" ]; then
  composer create-project --repository-url=https://mirror.mage-os.org magento/project-community-edition="${VERSION}" ./src
elif [ "$EDITION" == "mageos-hypernode-mirror" ]; then
  composer create-project --repository-url=https://mage-os.hypernode.com/mirror magento/project-community-edition="${VERSION}" ./src
elif [ "$EDITION" == "mageos-maxcluster-mirror" ]; then
  composer create-project --repository-url=https://mage-os.maxcluster.net/mirror magento/project-community-edition="${VERSION}" ./src
else
  composer create-project --repository=https://repo.magento.com/ magento/project-"${EDITION}"-edition="${VERSION}" ./src
fi

#if [ $? != 0 ]; then
#    echo -e "${BLUE}Please check the installation guide at ${YELLOW}https://github.com/markshust/docker-magento#install-fails-because-project-directory-is-not-empty${BLUE} for troubleshooting.${NC}"
#else
#    bin/clinotty [ ! -f "./var/composer_home/auth.json" ] && bin/clinotty mkdir -p ./var/composer_home && bin/clinotty cp /var/www/.composer/auth.json ./var/composer_home/auth.json
#fi

# Remove the directories to avoid copying unnecessary files during docker build
rm -rf src/vendor
rm -rf src/app

#
#bin/setup -m -v 2.4.6 -n

echo "Done!"